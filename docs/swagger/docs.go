// Package swagger GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/healthcheck": {
            "get": {
                "description": "Check if the service is up",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Check if the service is up",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.envelopeHealthCheck"
                        }
                    }
                }
            }
        },
        "/tables": {
            "get": {
                "description": "List Pragmatic live feed tables data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List Pragmatic live feed tables data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.envelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.PragmaticTableWithID"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Dealer": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.Last20Results": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "gameId": {
                    "type": "string"
                },
                "powerUpList": {
                    "type": "array",
                    "items": {}
                },
                "powerUpMultipliers": {
                    "type": "array",
                    "items": {}
                },
                "result": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "dto.PragmaticTable": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "dealer": {
                    "$ref": "#/definitions/dto.Dealer"
                },
                "languageSpecificTableInfo": {
                    "type": "string"
                },
                "last20Results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Last20Results"
                    }
                },
                "newTable": {
                    "type": "boolean"
                },
                "tableId": {
                    "type": "string"
                },
                "tableImage": {
                    "type": "string"
                },
                "tableLimits": {
                    "$ref": "#/definitions/dto.TableLimits"
                },
                "tableName": {
                    "type": "string"
                },
                "tableOpen": {
                    "type": "boolean"
                },
                "tableSubtype": {
                    "type": "string"
                },
                "tableType": {
                    "type": "string"
                },
                "totalSeatedPlayers": {
                    "type": "integer"
                }
            }
        },
        "dto.PragmaticTableWithID": {
            "type": "object",
            "properties": {
                "pragmaticTable": {
                    "$ref": "#/definitions/dto.PragmaticTable"
                },
                "tableAndCurrencyID": {
                    "description": "tID = 100; cID = 200 =\u003e TableAndCurrencyID = \"100:200\"",
                    "type": "string"
                }
            }
        },
        "dto.TableLimits": {
            "type": "object",
            "properties": {
                "maxBet": {
                    "type": "number"
                },
                "maxPlayers": {
                    "type": "integer"
                },
                "minBet": {
                    "type": "number"
                },
                "ranges": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "server.envelope": {
            "type": "object",
            "additionalProperties": {}
        },
        "server.envelopeHealthCheck": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "system_info": {
                    "$ref": "#/definitions/server.systemInfo"
                }
            }
        },
        "server.systemInfo": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Pragmatic Live Feed Aggregator API Documentation",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
